l_english:
 #
 appoint_dictator:0 "Appoint Dictator"
 appoint_dictator_past:0 "Appointed Dictator"
 appoint_dictator_act:0 "Appoint Dictator"
 appoint_dictator_act_past:0 "Appointed Dictator"
 appoint_dictator_effect_tooltip:0 "Emergency powers are granted to your [SCOPE.sC('actor').GetRulerTitle], until you are next at peace. Dictatorial powers mean that the senate will vote in your favor, for most actions."
 #
 ca_convert_religion:0 "Force Conversion"
 ca_convert_religion_past:0 "Forced Conversion"
 ca_convert_religion_act:0 "Force Conversion"
 ca_convert_religion_act_past:0 "Forced Conversion"
 ca_convert_religion_tooltip_republic:0 "The severity of the #Y Recently Converted#! modifier will depend on the #Y Zeal#! skill of your [GetOffice('office_pontifex').GetCulturalName(SCOPE.sChar('target').GetCharacter.GetCountry)], versus that of the target."
 ca_convert_religion_tooltip_monarchy:0 "The severity of the #Y Recently Converted#! modifier will depend on the #Y Zeal#! skill of your [GetOffice('office_high_priest_monarchy').GetCulturalName(SCOPE.sChar('target').GetCharacter.GetCountry)], versus that of the target."
 ca_convert_religion_tooltip_tribal:0 "The severity of the #Y Recently Converted#! modifier will depend on the #Y Zeal#! skill of your [GetOffice('office_high_priest').GetCulturalName(SCOPE.sChar('target').GetCharacter.GetCountry)], versus that of the target."
 #
 seize_property:1 "Proscribe"
 seize_property_past:1 "Issued proscription on $CHAR$"
 seize_property_act:1 "Issue proscription on $CHAR$"
 seize_property_act_past:1 "$COUNTRY$ issued proscription on $CHAR$"
 seize_property_relatives_tooltip:1 "Every family member of #Y [SCOPE.sChar('target').GetName]#! will lose #Y 20#! Loyalty."
 #
 unappoint_dictator:0 "Return Dictatorship"
 unappoint_dictator_effect_tooltip:0 "Your [SCOPE.sC('actor').GetRulerTitle] has been forced to return Dictatorial powers to the senate."
 unappoint_dictator_act:0 "Return powers to the senate."
 unappoint_dictator_act_past:0 "Returned powers to the senate."
 not_giving_up_power:0 "You cannot return dictatorial powers, as this character has refused to return them."
 not_dictator_any_more:1 "@trigger_no! A new leader is in power."
 #
 stop_seeking_treatment:0 "Stop Seeking Treatment"
 stop_seeking_treatment_past:0 "Stopped seeking treatment for an ailment."
 stop_seeking_treatment_act:0 "Stop seeking treatment for an ailment."
 stop_seeking_treatment_act_past:0 "Stopped seeking treatment for an ailment."
 #
 hold_triumph:0 "Hold Triumph"
 hold_triumph_past:0 "Triumph Held!"
 hold_triumph_act:0 "Hold a Triumph for $CHAR$"
 hold_triumph_act_past:0 "$COUNTRY$ held a glorious and extravagant triumph for $CHAR$."
 TRIUMPH_RECENTLY_HELD:1 "[SCOPE.sCountry('actor').GetName|Y] recently held a triumph and can not hold another until [SCOPE.sCountry('actor').GetVariableExpiry('triumph_recently_held')|Y]\n"
 #
 bribe_character:0 "Bribe"
 bribe_character_past:0 "Character Bribed!"
 bribe_character_act:0 "Bribe $CHAR$ to become more loyal"
 bribe_character_act_past:0 "$COUNTRY$ made sure that $CHAR$ is far more loyal."
 BRIBED_RECENTLY:1 "@trigger_no! [SCOPE.sChar('target').GetName ]was recently bribed, and will refuse further involvement until [SCOPE.sChar('target').GetVariableExpiry('ca_character_bribed')|Y]\n"
 #
 arrange_marriage:0 "Arrange Marriage"
 arrange_marriage_past:0 "Arranged a marriage"
 arrange_marriage_act:0 "Find a spouse for $CHAR$"
 arrange_marriage_select_title:0 "Arrange Marriage for $CHAR$"
 arrange_marriage_act_past:0 "$CHAR$ became married to [SCOPE.sChar('recipient').GetName|Y]."
 SELECT_TARGET:0 "Select"
 #
 marry_ruler:0 "Arrange Marriage with Ruler"
 marry_ruler_past:0 "Married Ruler!"
 marry_ruler_act:0 "Marriage!"
 marry_ruler_act_past:0 "$CHAR$ became married to [SCOPE.sCountry('actor').GetRuler.GetName|Y] ."
 #
 inspire_disloyalty:0 "Inspire Disloyalty"
 inspire_disloyalty_past:0 "Character more Disloyal!"
 inspire_disloyalty_act:0 "Inspire $CHAR$ to become less loyal"
 inspire_disloyalty_act_past:0 "$COUNTRY$ made sure that $CHAR$ is a bit less loyal."
 not_already_inspiring:0 "You can only inspire disloyalty in #Y 1#! character at a time."
 #
 recruit:0 "Recruit"
 recruit_past:0 "Character recruited!"
 recruit_act:0 "Recruit $CHAR$ to join our service instead!"
 recruit_act_past:0 "$COUNTRY$ recruited $CHAR$ to their service."
 #
 recruit_general:0 "Recruit General"
 recruit_general_past:0 "General recruited!"
 recruit_general_act:0 "Recruit $CHAR$ to join our service instead!"
 recruit_general_act_past:0 "$COUNTRY$ recruited $CHAR$ to their service."
 #
 secude_governor:0 "Entice Governor"
 secude_governor_past:0 "Governor Enticed!"
 secude_governor_act:1 "Entice $CHAR$ to Defect"
 secude_governor_act_past:1 "$COUNTRY$ enticed $CHAR$ to defect!"
 seduce_governor_tooltip:0 "An offer is sent to #Y [SCOPE.sChar('target').GetName]#!!"
 #
 smear_character:0 "Smear Reputation"
 smear_character_past:0 "Character Smeared"
 smear_character_past_failed:0 "Character Impeccable!"
 smear_character_act:0 "Smear the reputation of $CHAR$"
 smear_character_act_past:0 "$COUNTRY$ achieved to smear the character of $CHAR$."
 #
 ca_character_loan:0 "Demand Loan"
 ca_character_loan_past:0 "Demanded a loan."
 ca_character_loan_act:0 "Demand money from $CHAR$"
 ca_character_loan_act_past:0 "$COUNTRY$ demanded money from $CHAR$"
 #
 ca_character_loan_repay:0 "Repay Loan"
 ca_character_loan_repay_past:0 "Repaid a loan."
 ca_character_loan_repay_act:0 "Repay money to $CHAR$"
 ca_character_loan_repay_act_past:0 "$COUNTRY$ repaid money to $CHAR$"
 #
 banish_char:0 "Banish"
 banish_char_past:0 "Character Banished!"
 banish_char_act:0 "Banish $CHAR$"
 banish_char_act_past:0 "$COUNTRY$ banished $CHAR$!"
 #
 sacrifice_prisoner:0 "Sacrifice"
 sacrifice_prisoner_past:0 "Character Sacrificed!"
 sacrifice_prisoner_act:0 "Sacrifice $CHAR$"
 sacrifice_prisoner_act_past:0 "$COUNTRY$ sacrificed $CHAR$"
 sacrifice_tooltip:1 "The amount of #Y Centralization#! you will lose is proportional to the target's #Y Martial#! skill."
 #
 execute_character:0 "Execute"
 execute_character_past:0 "Character Executed!"
 execute_character_act:0 "Execute $CHAR$"
 execute_character_act_past:0 "$COUNTRY$ executed $CHAR$."
 #
 support_primary_heir:1 "Demand Support for Heir"
 support_primary_heir_past:0 "$CHAR$ was encouraged to support the Primary Heir!"
 support_primary_heir_act:0 "Encourage $CHAR$ to support the Primary Heir!"
 support_primary_heir_act_past:1 "$CHAR$ now clearly sees who the heir is for $COUNTRY$."
 #
 free_hands:0 "Give Free Hands"
 free_hands_past:0 "Governor given Free Hands!"
 free_hands_act:0 "Give $CHAR$ Free Hands"
 free_hands_act_past:1 "Look the other way, while $CHAR$ makes the most of their position."
 free_hands_tooltip:1 "Free Hands will cost #R 10#! Loyalty to revoke.\nYou will be unable to revoke #Y Free Hands#! on this character for #Y 2#! years."
 free_hands_cooldown_tooltip:0 "You cannot revoke #Y Free Hands#! until at least #Y 2#! years have passed."
 #
 tie_hands:0 "Revoke Free Hands"
 tie_hands_past:0 "Revoked Free Hands"
 tie_hands_act:0 "Revoke Free Hands"
 tie_hands_act_past:0 "Revoked Free Hands"
 tie_hands_tooltip:0 "If this character loses their job, or is removed from office with Free Hands active, it will be removed, and they will lose #R 10#! Loyalty."
 #
 ransom_prisoner:0 "Ransom Prisoner"
 ransom_prisoner_past:0 "Character Ransomed from Prison!"
 ransom_prisoner_act:0 "Ransom $CHAR$ from Foreign Prison"
 ransom_prisoner_act_past:0 "$COUNTRY$ ransomed $CHAR$ from Foreign Prison"
 ransom_prisoner_tooltip:0 "Open up negotiations to ransom #Y [SCOPE.sChar('target').GetName]#! from capture."
 #
 release_prisoner:0 "Release Prisoner"
 release_prisoner_past:0 "Character Released from Prison!"
 release_prisoner_act:0 "Release $CHAR$ from Prison"
 release_prisoner_act_past:0 "$COUNTRY$ released $CHAR$ from prison."
 release_prisoner_tooltip:1 "If no home country exists, or the prisoner is from our own country, they will join our character pool."
 #
 imprison:0 "Imprison"
 imprison_past:0 "Character Imprisoned"
 imprison_act:1 "Imprison $CHAR$"
 imprison_act_past:1 "$CHAR$ has been imprisoned."
 imprison_party_leader_tooltip:1 "Imprisoning a #Y Party Leader#! or #Y Family Head#! will destabilize your nation!"
 #
 assassinate:1 "Plan Assassination!"
 assassinate_past:1 "Planned Assassination!"
 assassinate_act:0 "Attempt to Assassinate $CHAR$"
 assassinate_act_past:2 "$COUNTRY$ has begun planning to assassinate $CHAR$!"
 employer_is_target_employer_tt:0 "@trigger_no! [SCOPE.sC('actor').GetRuler.GetName] has at least one #Y Friend#! in #Y [SCOPE.sChar('target').GetEmployer.GetName]#!\n      Friend must not be a #Y Close Relative#! of the target."
 assassinate_attempt_effect_tooltip:0 "Our agents will begin plotting to assassinate #Y [SCOPE.sChar('target').GetName]#!!"
 only_one_assassination:0 "You may only plan one assassination at a time."
 #
 assassinate_own_ruler:0 "Assassinate"
 assassinate_own_ruler_past:0 "Ruler Assassinated"
 assassinate_own_ruler_past_failed:0 "Ruler avoided assassination!"
 assassinate_own_ruler_act:0 "Attempt to assassinate our own ruler"
 assassinate_own_ruler_act_past:0 "$COUNTRY$ has assassinated their own ruler."
 #
 imprison_republic_trial:0 "Accuse of Crime"
 imprison_republic_trial_act:0 "Accuse of Crime"
 #
 BASE_CHANCE_CI:0 "Base: $VAL|+=$"
 CI_CHANCE_FINESSE:0 "$CHAR|Y$ Finesse: $VAL|+=$"
 WE:0 "We"
 CHAR_INTERACTION_SETUP:0 "When we have performed a character interaction."
 CHAR_INTERACTION_HEADER:0 ""
 CHAR_INTERACTION_1:0 "$TITLE|H$"
 CHAR_INTERACTION_2:0 "$DESC$"
 CHAR_INTERACTION_3:0 ""
 CHAR_INTERACTION_4:0 "$EFECT$"
 CHAR_INTERACTION_5:0 ""
 CHAR_INTERACTION_6:0 ""
 CHAR_INTERACTION_LOG:0 "$DESC$"
 CHAR_INTERACTION_BTN1:0 "OK"
 CHAR_INTERACTION_BTN2:0 "OK"
 CHAR_INTERACTION_BTN3:0 "Go to"
 CHAR_INTERACTION_MAP:0 ""
 CHAR_INTERACTION_ON_US_SETUP:0 "When another nation performs a character interaction on our of our characters."
 CHAR_INTERACTION_ON_US_HEADER:0 ""
 CHAR_INTERACTION_ON_US_1:0 "$TITLE|H$"
 CHAR_INTERACTION_ON_US_2:0 "$DESC$"
 CHAR_INTERACTION_ON_US_3:0 ""
 CHAR_INTERACTION_ON_US_4:0 "$EFECT$"
 CHAR_INTERACTION_ON_US_5:1 "$DETAILS$"
 CHAR_INTERACTION_ON_US_6:1 "$FAMILY$"
 CHAR_INTERACTION_ON_US_LOG:0 "$DESC$"
 CHAR_INTERACTION_ON_US_BTN1:0 "OK"
 CHAR_INTERACTION_ON_US_BTN2:0 "OK"
 CHAR_INTERACTION_ON_US_BTN3:0 "Go to"
 CHAR_INTERACTION_ON_US_MAP:0 ""
 #
 based_on_character_wealth_tooltip:0 "The cost of this interaction is based on the wealth of the target character."
 get_treatable_disease_tooltip:0 "Seek treatment for #Y [SCOPE.sChar('target').Custom('get_treatable_disease')]#!."
 seek_treatment:0 "Seek Treatment"
 seek_treatment_past:0 "Sought treatment for an ailment."
 seek_treatment_act:0 "Purchase treatment for $CHAR$, using state funds."
 seek_treatment_act_past:0 "We sought treatment for $CHAR$."
 #
 hold_games:0 "Hold Games"
 hold_games_act:0 "Hold Games for the People"
 hold_games_past:0 "Held Games"
 hold_games_act_past:0 "$COUNTRY$ has held games."
 GAMES_RECENTLY_HELD:1 "@trigger_no![SCOPE.sCountry('actor').GetName|Y] recently arranged Games and can not hold more of them until [SCOPE.sCountry('actor').GetVariableExpiry('games_recently_held')|Y]\n"
 #grant_citizenship
 grant_citizenship:0 "Grant Citizenship Status"
 grant_citizenship_act:0 "Grant citizenship status to $CHAR$."
 grant_citizenship_past:0 "Granted citizenship status to $CHAR$."
 grant_citizenship_act_past:0 "Granted citizenship status to $CHAR$."
 #
 royal_marriage_acceptance_tooltip_base:0 "        #Y 20#! Minimum Value"
 royal_marriage_acceptance_tooltip_legitimacy:0 "        #R +[SCOPE.ScriptValue('royal_marriage_acceptance_vs_legitimacy')]#! [SCOPE.sC('actor').GetAdjective] Legitimacy (#Y [SCOPE.ScriptValue('royal_marriage_acceptance_our_legitimacy')]#!) vs [SCOPE.sChar('target').GetEmployer.GetAdjective] Legitimacy (#Y [SCOPE.ScriptValue('royal_marriage_acceptance_their_legitimacy')]#!)"
 royal_marriage_acceptance_tooltip_larger:0 "        #R +20#! [SCOPE.sChar('target').GetEmployer.GetName] is mightier than us"
 has_valid_marriage_candidate_female:1 "#Y [SCOPE.sC('actor').GetName]#! has an unmarried adult female dynasty member."
 has_valid_marriage_candidate_male:1 "#Y [SCOPE.sC('actor').GetName]#! has an unmarried adult male dynasty member."
 royal_marriage_tooltip_candidate_a:0 "Propose a marriage between #Y [SCOPE.sChar('royal_marriage_candidate').GetName]#! and #Y [SCOPE.sChar('target').GetName]#!."
 royal_marriage_tooltip_candidate_b:0 "Propose a marriage between #Y [SCOPE.sChar('royal_marriage_candidate_2').GetName]#! and #Y [SCOPE.sChar('target').GetName]#!."
 royal_marriage_tooltip_candidate_c:0 "Propose a marriage between #Y [SCOPE.sChar('royal_marriage_candidate_3').GetName]#! and #Y [SCOPE.sChar('target').GetName]#!."
 royal_marriage.1.t:0 "A Royal Union"
 royal_marriage.1.desc:0 "In the interests of future cooperation, we should decide which of our royal line we might offer in marriage to [SCOPE.sChar('target').GetName] of the royal house of [SCOPE.sChar('target').GetEmployer.GetName]."
 royal_marriage.1.a:0 "[SCOPE.sChar('royal_marriage_candidate').GetPraenomen] is a clear choice."
 royal_marriage.1.b:0 "Send [SCOPE.sChar('royal_marriage_candidate_2').GetPraenomen]."
 royal_marriage.1.c:0 "Suggest [SCOPE.sChar('royal_marriage_candidate_3').GetPraenomen]."
 royal_marriage.1.d:0 "Perhaps this is unwise."
 female_moves_to_tooltip:0 "#Y [SCOPE.sChar('female_marriage_candidate').GetName]#! will move to #Y [SCOPE.sC('male_country_candidate').GetName]#! to be with her husband."
 royal_marriage.2.t:0 "Marriage Proposal"
 royal_marriage.2.desc:0 "The royal house of [SCOPE.sC('proposer_country').GetName] sends an interesting request. They suggest that a strategic marriage between [SCOPE.sChar('selected_target').GetName] and [SCOPE.sChar('target').GetName], might go a long way towards improving our diplomatic relations.\n\nNeedless to say, this comes with some risk; the integrity of our royal line is paramount, yet the opportunities this may bring are not to be discarded so lightly."
 royal_marriage.2.a:0 "Let us make merry!"
 royal_marriage.2.b:0 "A terrible plan."
 royal_marriage.2.c:0 "This is simply not viable."
 royal_marriage.3.t:0 "Marriage Declined"
 royal_marriage.3.desc:0 "Due to reasons beyond their control, the [SCOPE.sC('receiver_country').GetAdjective] court cannot approve our marriage request."
 royal_marriage.3.a:0 "Disappointing."
 royal_marriage.4.t:0 "Marriage Refused"
 royal_marriage.4.desc:0 "The ungrateful curs in [SCOPE.sC('receiver_country').GetName] have refused our generous offer to be wedded to our royal house.\n\nOur people shall remember this outrage!"
 royal_marriage.4.a:0 "Disappointing."
 royal_marriage.5.t:0 "Marriage Approved!"
 royal_marriage.5.desc:0 "The [SCOPE.sC('receiver_country').GetAdjective] house have graciously accepted our offer of royal marriage. [SCOPE.sChar('female_marriage_candidate').GetName] has traveled to [SCOPE.sC('male_country_candidate').GetName] in order to meet her betrothed, [SCOPE.sChar('male_marriage_candidate').GetName].\n\nMay our two nations prosper as a result of this mutual display of affection."
 royal_marriage.5.a:0 "Splendid!"
 current_marriage_proposal:1 "@trigger_no! You must not be in a current marriage negotiation."
 female_shall_move_tooltip:0 "The female subject in a marriage will always move to her husband's country."
 propose_marriage:1 "Arrange Marriage"
 propose_marriage_act:1 "Arrange a marriage between a member of our dynasty, and $CHAR$."
 propose_marriage_past:1 "Arranged a royal marriage with $CHAR$."
 propose_marriage_act_past:1 "Arranged a royal marriage with $CHAR$."
 #
 friend_progress_small:0 "Your Ruler will make a #Y Small#! amount of progress towards befriending [SCOPE.sChar('friend_target').GetName]."
 friend_progress_moderate:0 "Your Ruler will make a #Y Moderate#! amount of progress towards befriending [SCOPE.sChar('friend_target').GetName]."
 friend_progress_large:0 "Your Ruler will make a #Y Large#! amount of progress towards befriending [SCOPE.sChar('friend_target').GetName]."
 currently_befriending_tooltip:0 "@trigger_no!Already befriending a character"
 defriend:0 "Remove Friend"
 defriend_act:0 "Remove friendship with $CHAR$."
 defriend_act_past:0 "Removed friendship with $CHAR$."
 defriend_past:0 "Removed friendship with $CHAR$."
 befriend:0 "Make Friends"
 befriend_act:0 "Attempt to make friends with $CHAR$."
 befriend_act_past:0 "Attempted to make friends with $CHAR$."
 befriend_past:0 "Attempted to make friends with $CHAR$."
 #
 stop_inspire_disloyalty:0 "Stop Inspiring Disloyalty"
 stop_inspire_disloyalty_act:0 "Stop inspiring disloyalty"
 stop_inspire_disloyalty_past:0 "Stopped inspiring disloyalty"
 stop_inspire_disloyalty_act_past:0 "Stopped inspiring disloyalty"
 stop_inspiring_disloyalty_tooltip:0 "You will stop inspiring disloyalty in foreign characters."
 adjacent_provinces_enticed:0 "Adjacent areas governed by #Y [SCOPE.sChar('target').GetName]#! will be annexed."
 province_claims_enticed:0 "#Y [SCOPE.sChar('target').GetEmployer.GetName]#! will gain #Y Claims#! on all provinces transferred."
 inspire_cooldown_tooltip:0 "You cannot revoke #Y Inspire Disloyalty#! until at least #Y 2#! years have passed."
 inspire_cooldown_action_tooltip:0 "You will be unable to revoke #Y Inspire Disloyalty#! until at least #Y 2#! years have passed."
 already_inspiring_tooltip:0 "Already inspiring disloyalty in a foreign character!"
 #
 rival_ruler:0 "Make Rival"
 rival_ruler_act:0 "Make $CHAR$ a rival"
 rival_ruler_past:0 "Made $CHAR$ a rival"
 rival_ruler_act_past:0 "Made $CHAR$ a rival"
 #
 succession_crisis_make_mercenary:0 "Entice to Become Mercenary"
 succession_crisis_make_mercenary_act:0 "Entice $CHAR$ to become a mercenary"
 succession_crisis_make_mercenary_act_past:0 "Enticed $CHAR$ to become a mercenary"
 succession_crisis_make_mercenary_past:0 "Enticed $CHAR$ to become a mercenary"
 #
 deserters_already_encouraged_tooltip:0 "@trigger_no! You can only use Encourage Deserters on a successor once every #Y 5#! years.\n"
 unit_is_destroyed_tooltip:0 "A random subunit from the the army of #Y [SCOPE.sChar('target').GetName]#! deserts."
 succession_crisis_encourage_deserters:0 "Encourage Deserters"
 succession_crisis_encourage_deserters_act:0 "Encourage Deserters"
 succession_crisis_encourage_deserters_past:0 "$COUNTRY$ encouraged armies to desert from $CHAR$"
 succession_crisis_encourage_deserters_act_past:0 "$COUNTRY$ encouraged armies to desert from $CHAR$"
 #
 recently_supported_sc_tooltip:0 "You can only support a pretender once every #Y 2#! years."
 support_foreign_successor:0 "Support Pretender"
 support_foreign_successor_act:0 "Support $CHAR$ in their efforts to overthrow the government"
 support_foreign_successor_past:0 "Supported $CHAR$ in their efforts to overthrow the government"
 support_foreign_successor_act_past:0 "Supported $CHAR$ in their efforts to overthrow the government"
 #
 coup_on_return_tooltip:0 "If you hire #Y [SCOPE.sChar('target').GetName]#! once they have become a mercenary, they are likely to attempt to seize the throne once again."
 #
 seize_successor_assets:0 "Seize Assets"
 seize_successor_assets_act:0 "Seize the assets of $CHAR$, while they are not present to protect them"
 seize_successor_assets_past:0 "$COUNTRY$ seized the assets of $CHAR$"
 seize_successor_assets_act_past:0 "$COUNTRY$ seized the assets of $CHAR$"
 #
 derival_ruler:0 "Remove Rival"
 derival_ruler_act:0 "Remove $CHAR$ as a rival"
 derival_ruler_past:0 "$COUNTRY$ removed $CHAR$ as a rival"
 derival_ruler_act_past:0 "$COUNTRY$ removed $CHAR$ as a rival"
 #
 stop_inspire_disloyalty_ruler:0 "End Inspiring Foreign Disloyalty"
 stop_inspire_disloyalty_ruler_act:0 "Cease inspiring foreign parties."
 stop_inspire_disloyalty_ruler_past:0 "Ceased inspiring foreign parties."
 stop_inspire_disloyalty_ruler_act_past:0 "$COUNTRY$ inspiring foreign parties."
 #TP
 flog:0 "Flog"
 flog_act:0 "Flog $CHAR$"
 flog_past:0 "$COUNTRY$ flogged $CHAR$"
 flog_act_past:0 "$COUNTRY$ flogged $CHAR$"
 rivals_gain_loyalty_flogging:0 "#Y All Rivals of [SCOPE.sChar('target').GetName]:#!"
 #
 grant_clan_autonomy:0 "Grant Clan Autonomy"
 grant_clan_autonomy_act:0 "Grant $CHAR$ total autonomy"
 grant_clan_autonomy_act_past:0 "Granted $CHAR$ total autonomy"
 grant_clan_autonomy_past:0 "$COUNTRY$ granted $CHAR$ total autonomy"
 clan_chief_secedes:0 "#Y [SCOPE.sChar('target').GetName]#! will leave to lead this country.\nIf [SCOPE.sChar('target').GetSheHe] has any family members in #Y [SCOPE.sC('actor').GetName]#!, they will also leave with [SCOPE.sChar('target').GetHerHim]."
 becomes_a_tributary_tt:0 "\nThey will become our #Y Tributary#!."
 every_remaining_chief_tt:0 "\n\nEvery remaining #Y Clan Chief#!:"
 #
 insulted_clan_chief:0 "Insulted Clan Chief"
 desc_insulted_clan_chief:0 "This clan chief is feeling particularly aggrieved over our exaltation of a peer."
 exalted_clan_chief:0 "Exalted Clan Chief"
 desc_exalted_clan_chief:0 "This clan chief is feeling magnanimous after being honored us."
 exalt_clan_chief:0 "Exalt Clan Chief"
 exalt_clan_chief_act:0 "Exalt $CHAR$"
 exalt_clan_chief_act_past:0 "Exalted $CHAR$"
 exalt_clan_chief_past:0 "Exalted $CHAR$"
 every_other_clan_chief:0 "\nEvery other #Y Clan Chief#!:"
 no_other_clan_chief_modifier_tt:0 "@trigger_no! No #Y Clan Chief#! has the #Y Exalted Clan Chief#! modifier."
 #
 grant_laurels:0 "Grant Capitulatory Honors"
 grant_laurels_act:0 "Grant Capitulatory Honors to $CHAR$"
 grant_laurels_past:0 "Granted capitulatory honors to $CHAR$"
 grant_laurels_act_past:0 "$COUNTRY$ granted capitulatory honors to $CHAR$"
 laurels_already_granted_tt:0 "Have already capitulated to this character"
 may_gain_nickname:0 "Has a chance to gain a #Y Cognomen#!."
 #
 tutor_heir:0 "Tutor Heir"
 tutor_heir_act:0 "Choose a new ambition for a prince or princess"
 tutor_heir_act_past:0 "Chose a new ambition for the royal offspring"
 tutor_heir_past:0 "Chose a new ambition for the royal offspring"
 tutor_heir_select_title:0 "Choose a Candidate to Tutor"
 #
 every_applicable_family_member_tt:0 "\nEvery #Y Family Member#! Eligible for Office:"
 grant_stipends:0 "Grant Stipends"
 grant_stipends_act:0 "Grant stipends to the family of $CHAR$"
 grant_stipends_act_past:0 "$COUNTRY$ granted stipends to the family of $CHAR$"
 grant_stipends_past:0 "Granted stipends to the family of $CHAR$"
 #
 gladiatorial_debut:0 "Arrange Gladiatorial Debut"
 gladiatorial_debut_act:0 "Arrange a gladiatorial debut"
 gladiatorial_debut_past:0 "Arranged a gladiatorial debut"
 gladiatorial_debut_act_past:0 "Arranged a gladiatorial debut"
 gladiator_outcome_tooltip:0 "[SCOPE.sC('actor').GetRuler.GetName] will gain @popularity_icon! Popularity based on the outcome of the match.\nThe winner of the fight will be #Y Released#! from prison."
 gladiatorial_debut_select_title:0 "Select an Opponent"
 #
 republic_reward_veterans:0 "Reward Veterans"
 republic_reward_veterans_act:0 "Pay off veterans loyal to $CHAR$"
 republic_reward_veterans_act_past:0 "$COUNTRY$ bought off veterans loyal to $CHAR$"
 republic_reward_veterans_past:0 "Bought off veterans loyal to $CHAR$"
 unit_is_bought_off_tooltip:0 "Up to 4 cohorts loyal to #Y [SCOPE.sChar('target').GetName]#! will lose Personal Loyalty."
 REWARDED_VETERANS_RECENTLY:1 "@trigger_no! Veterans loyal to [SCOPE.sChar('target').GetName] have been paid off recently, and we will be unable to convince others until [SCOPE.sChar('target').GetVariableExpiry('republic_reward_veterans_cooldown')|Y]\n"
 #
 merc_buyoff:0 "Attempt to Buy Off Mercenary"
 merc_buyoff_act:0 "Attempt to buy off $CHAR$"
 merc_buyoff_past:0 "Attempted to Buy Off $CHAR$"
 merc_buyoff_act_past:0 "Attempted to Buy Off $CHAR$"
 merc_buyoff_effect_tooltip:0 "An offer will be made to [SCOPE.sChar('target').GetName]. If their current employer refuses to match the offer, they will switch to our side!"
 merc_joined_us_tt:0 "[SCOPE.sChar('target').GetName] has joined us, with their band of mercenaries!"
 warfare.3.t:0 "A Better Offer"
 warfare.3.desc:0 "The mercenaries we have hired, led by [SCOPE.sChar('target').GetName], have approached us claiming that the fiends in [SCOPE.sC('actor').GetName] have offered them a sizable sum to switch their allegiance.\n\nThey have shrewdly offered us a chance to match the offer, hoping to profit doubly from this underhanded deal."
 warfare.3.a:0 "Very well..."
 warfare.3.b:0 "Never!"
 warfare.4.t:0 "Offer Refused"
 warfare.4.desc:0 "The Mercenary band led by [SCOPE.sChar('target').GetName] has callously refused our offer of superior employment!\n\nIt seems that they received a better offer from the [SCOPE.sChar('target').GetEmployer.GetAdjective] villains."
 warfare.4.a:0 "Curses!"
 warfare.5.t:0 "Mercenary Buyout Successful!"
 warfare.5.desc:0 "The band of Mercenaries led by [SCOPE.sChar('target').GetName], has accepted our benevolent offer of employment. The villains in [SCOPE.sC('counter_target').GetName] apparently refused to consider matching our generous offer."
 warfare.5.a:0 "That is their loss!"
 merc_1_year_buyoff_tt:0 "A Mercenary cannot be enticed more than once a year."
